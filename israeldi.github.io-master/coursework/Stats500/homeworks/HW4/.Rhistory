rm(list = ls())
library(faraway)
data(sat)
# Problem 1
# a) OLS
regLS = lm(total ~ takers + ratio + salary + expend, data = sat)
summary(regLS)
# b) LAD
library(quantreg)
regLad <- rq(Species ~ Area + Elevation + Nearest
+ Scruz + Adjacent, data=gala)
summary(regLad)
# c) Huber's
library(MASS)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
summary(regHuber)
rm(list = ls())
library(faraway)
data(sat)
# Problem 1
# a) OLS
regLS = lm(total ~ takers + ratio + salary + expend, data = sat)
summary(regLS)
# b) LAD
library(quantreg)
regLad = rq(total ~ takers + ratio + salary + expend, data = sat)
summary(regLad)
# c) Huber's
library(MASS)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
summary(regHuber)
rm(list = ls())
library(faraway)
data(sat)
# Problem 1
# a) OLS
regLS = lm(total ~ takers + ratio + salary + expend, data = sat)
summary(regLS)
# b) LAD
library(quantreg)
regLad = rq(total ~ takers + ratio + salary + expend, data = sat)
summary(regLad)
# c) Huber's
library(MASS)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
summary(regHuber)
library(quantreg)
install.packages("quantreg")
library(quantreg)
regLad = rq(total ~ takers + ratio + salary + expend, data = sat)
summary(regLad)
rm(list = ls())
library(faraway)
data(prostate)
View(prostate)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
regModel = update(regModel, . ~ . - age)
summary(regModel)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
#6)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
library(leaps)
install.packages("leaps")
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
View(prostate)
plot(1:8, rs$adjr2, xlab="No. of Parameters",
ylab="Adjusted Rsq")
plot(2:8, rs$adjr2, xlab="No. of Parameters",
ylab="Adjusted Rsq")
rs = summary(b)
plot(1:8, rs$adjr2, xlab="No. of Parameters",
ylab="Adjusted Rsq")
which.max(rs$adjr2)
data(state)
library(longley)
data(state)
View(state)
b = regsubsets(lpsa ~ ., data=statedata)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, xlab="No. Parameters",
ylab="Cp")
abline(0, 1)
plot(1:9, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
plot(1:8, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
plot(2:8, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
library(leaps)
b = regsubsets(lpsa ~ ., data=statedata)
rs = summary(b)
which.min(rs$cp)
plot(2:8, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
library(leaps)
b = regsubsets(lpsa ~ ., data=statedata)
rs = summary(b)
which.min(rs$cp)
plot(2:8, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
library(leaps)
b = regsubsets(lpsa ~ ., data=statedata)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, xlab="No. Parameters", ylab="Cp")
abline(0, 1)
help(prostate)
# c)  Mallows cp
library(leaps)
b = regsubsets(lpsa ~ ., data=statedata)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp")
abline(0, 1)
rm(list = ls())
library(faraway)
data(prostate)
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp")
abline(0, 1)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
# b) Adjusted R^2
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq")#,ylim = c(0,27))
# select model with largest adjusted R2
which.max(rs$adjr2)
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(0,1))
# select model with largest adjusted R2
which.max(rs$adjr2)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.8))
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.7))
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.66))
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.67))
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.68))
# select model with largest adjusted R2
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.69))
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
summary(b)
View(prostate)
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
# select model with largest adjusted R2
which.max(rs$adjr2)
# Problem 2
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
# Problem 2
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
regBack = lm(lpsa ~ lcavol + lweight + lbph + svi, data = prostate)
summary(regBack)
regR2 = lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp, data = prostate)
summary(regR2)
regCp = lm(lpsa ~ lcavol + lweight + lbph + svi + lcp, data = prostate)
summary(regCp)
summary(b)
# Problem 2
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
#6)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
# b) Adjusted R^2
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
# select model with largest adjusted R2
which.max(rs$adjr2)
# predictors: lcavol, lweight, age, lbph, svi, lcp
# c)  Mallows cp
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
# predictors: lcavol, lweight, lbph, svi
regBack = lm(lpsa ~ lcavol + lweight + svi, data = prostate)
summary(regBack)
regR2 = lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp, data = prostate)
summary(regR2)
regCp = lm(lpsa ~ lcavol + lweight + lbph + svi, data = prostate)
summary(regCp)
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
#6)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
# b) Adjusted R^2
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
# select model with largest adjusted R2
which.max(rs$adjr2)
# predictors: lcavol, lweight, age, lbph, svi, lcp
# c)  Mallows cp
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
# predictors: lcavol, lweight, lbph, svi
regBack = lm(lpsa ~ lcavol + lweight + svi, data = prostate)
summary(regBack)
regR2 = lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp + pgg45, data = prostate)
summary(regR2)
regCp = lm(lpsa ~ lcavol + lweight + lbph + svi, data = prostate)
summary(regCp)
regFull = lm(lpsa ~ ., data = prostate)
summary(regFull)
# Problem 2
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
#6)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
# b) Adjusted R^2
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
# select model with largest adjusted R2
which.max(rs$adjr2)
# predictors: lcavol, lweight, age, lbph, svi, lcp
# c)  Mallows cp
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
# predictors: lcavol, lweight, lbph, svi
regFull = lm(lpsa ~ ., data = prostate)
summary(regFull)
regBack = lm(lpsa ~ lcavol + lweight + svi, data = prostate)
summary(regBack)
regR2 = lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp + pgg45, data = prostate)
summary(regR2)
regCp = lm(lpsa ~ lcavol + lweight + lbph + svi, data = prostate)
summary(regCp)
rm(list = ls())
library(faraway)
data(sat)
# Problem 1
# a) OLS
regLS = lm(total ~ takers + ratio + salary + expend, data = sat)
summary(regLS)
# b) LAD
library(quantreg)
regLad = rq(total ~ takers + ratio + salary + expend, data = sat)
summary(regLad)
# c) Huber's
library(MASS)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
summary(regHuber)
rm(list = ls())
library(faraway)
data(sat)
# Problem 1
# a) OLS
regLS = lm(total ~ takers + ratio + salary + expend, data = sat)
summary(regLS)
# b) LAD
library(quantreg)
regLad = rq(total ~ takers + ratio + salary + expend, data = sat)
summary(regLad)
# c) Huber's
library(MASS)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
summary(regHuber)
regHuber$residuals
regHuber$df.residual
regHuberTvals = c(21.2533,-13.6470,-1.6894,0.9293,0.3935)
regHuberpValues = 2 * (1 - pt(regHuberTvals, df=45))
View(regHuberpValues)
regHuberTvals = matrix(c(21.2533,-13.6470,-1.6894,0.9293,0.3935),nrow = 5,ncol = 1)
regHuberpValues = 2 * (1 - pt(regHuberTvals, df=45))
View(regHuberpValues)
regHuberpValues = 2 * (1 - pt(21.2533, df=45))
regHuberpValues = 2 * (1 - pt(-13.6470, df=45))
regHuberpValues = 2 * (1 - pt(-1.6894, df=45))
regHuberpValues = 2 * (1 - pt(13.6470, df=45))
regHuberpValues = 2 * (pt(-13.6470, df=45))
regHuberpValues = 2 * (pt(-21.2533, df=45))
regHuberTvals = matrix(c(21.2533,13.6470,1.6894,0.9293,0.3935),nrow = 5,ncol = 1)
regHuberpValues = 2 * (1- pt(regHuberTvals, df=45))
View(regHuberTvals)
ViewIregHuberpValues)
ViewIregHuberpVals)
View(regHuberpValues)
View(regHuberpValues)
summary(regLad)
summary(regLS)
summary(regLS)
summary(regLad)
regHuber = rlm(total ~ takers + ratio + salary + expend, data = sat)
regHuberTvals = matrix(c(21.2533,13.6470,1.6894,0.9293,0.3935),nrow = 5,ncol = 1)
regHuberpValues = 2 * (1- pt(regHuberTvals, df=45))
summary(regHuber)
View(regHuberpValues)
# Problem 2
rm(list = ls())
library(faraway)
data(prostate)
# a) Backward elimination
#1)
regModel = lm(lpsa ~ ., data = prostate)
summary(regModel)
#2)
regModel = update(regModel, . ~ . - gleason)
summary(regModel)
#3)
regModel = update(regModel, . ~ . - age)
summary(regModel)
#4)
regModel = update(regModel, . ~ . - lcp)
summary(regModel)
#5)
regModel = update(regModel, . ~ . - pgg45)
summary(regModel)
#6)
regModel = update(regModel, . ~ . - lbph)
summary(regModel)
# b) Adjusted R^2
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
summary(b)
# plot adjusted R2 against p+1
rs = summary(b)
plot(1:8, rs$adjr2, cex.main = .9, cex.lab = .9, main = "Adj R^2 Plot for prostate data",
xlab="No. of Parameters", ylab="Adjusted Rsq",ylim = c(.5,.65))
# select model with largest adjusted R2
which.max(rs$adjr2)
# predictors: lcavol, lweight, age, lbph, svi, lcp
# c)  Mallows cp
library(leaps)
b = regsubsets(lpsa ~ ., data = prostate)
rs = summary(b)
which.min(rs$cp)
plot(1:8, rs$cp, cex.main = .9, cex.lab = .9, main = "Cp Plot for prostate data",
xlab="No. Parameters", ylab="Cp", ylim = c(0,27))
abline(0, 1)
# predictors: lcavol, lweight, lbph, svi
regBack = lm(lpsa ~ lcavol + lweight + svi, data = prostate)
summary(regBack)
summary(b)
help(regsubsets)
regR2 = lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp + pgg45, data = prostate)
summary(regR2)
summary(regCp)
regCp = lm(lpsa ~ lcavol + lweight + lbph + svi, data = prostate)
summary(regCp)
